version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: xm_port_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # FastAPI Backend (Development)
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
      target: development
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/xm_port_dev
      - DATABASE_URL_ASYNC=postgresql+asyncpg://postgres:password@postgres:5432/xm_port_dev
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=development-secret-key-at-least-32-chars-long-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    volumes:
      - ./apps/api:/app
      - ./packages/shared:/packages/shared
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    working_dir: /app/src

  # Next.js Frontend (Development)
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
      target: development
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=development-nextauth-secret
    volumes:
      - ./apps/web:/app
      - ./packages:/packages
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    command: npm run dev

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: xm-port-network